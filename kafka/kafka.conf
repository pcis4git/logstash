input {

  kafka {
    id => "kafka-input"
    bootstrap_servers => "${THOR_KAFKA_BROKER}"
    topics => ["${THOR_KAFKA_TOPIC}"]
    codec => "json"
    consumer_threads => 1
    group_id => "${THOR_KAFKA_GROUP}"
    auto_offset_reset => "earliest"
    decorate_events => true
  }

}


filter {  

  split {
    field => "records"
    add_field => {
      "THOR_DEBUG" => "${THOR_DEBUG}"
    }    
  }

  ruby {
     id => "kafka-filter-rubycode"
     path => "/usr/share/logstash/pipeline/kafka-filter.rb"
  }

}


output {

  if( "true" == "${THOR_DEBUG}") {

    stdout { 
      codec => rubydebug {
        metadata => true
      }
    }

    file { 
      path => "/tmp/kafka.%{[@metadata][target_index]}.output.json" 
    }  
  }

  elasticsearch {
      id => "azure-eventhubs-to-elastic"
      hosts => ["${THOR_ELASTIC_COORDINATOR}"]
      index => ["%{[@metadata][target_index]}"]
      user     => "${THOR_ELASTIC_USER}"
      password => "${THOR_ELASTIC_PASSWD}"
      ssl_enabled => "true"
      ssl_verification_mode => "none"
  }  

}
